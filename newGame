import pygame
import spritesheet

pygame.init()
WIDTH = 1280
HEIGHT = 720
screen = pygame.display.set_mode((WIDTH, HEIGHT))
pygame.display.set_caption("sprite show")

# Activate sprite sheet
sprite_image = pygame.image.load("running_anim_13.png").convert_alpha()
sheet = spritesheet.SpriteSheet(sprite_image)
BLACK = (0, 0, 0)
WHITE = (255, 255, 255)
pygame.key.set_repeat(500, 100)

# Frame dimensions and settings
frame_width = 160
frame_height = 167
frame_right = [
    sheet.get_image(0, 0, frame_width, frame_height),
    sheet.get_image(1, 0, frame_width, frame_height),
    sheet.get_image(2, 0, frame_width, frame_height),
    sheet.get_image(3, 0, frame_width, frame_height)
]

left_frame = [
    sheet.get_image(0, 1, frame_width, frame_height),
    sheet.get_image(1, 1, frame_width, frame_height),
    sheet.get_image(2, 1, frame_width, frame_height),
    sheet.get_image(3, 1, frame_width, frame_height)
]

# Frame and jump variables
FPS = 60
clock = pygame.time.Clock()
is_jumping = False
gravity = 0.5
vertical_velocity = 0
jump_speed = 15  # Positive jump speed, adjusted as needed
current_frame = 0
start = True
x_pos = 100
y_pos = HEIGHT - frame_height
movement_speed = 20
ground_level = HEIGHT - frame_height
obstacle = pygame.Rect(600, 300, 500, 200)

current_frames = frame_right

while start:
    screen.fill(BLACK)
    pygame.draw.rect(screen, WHITE, obstacle)

    screen.blit(current_frames[current_frame], (x_pos, y_pos))
    player_box = pygame.Rect(x_pos, y_pos, frame_width, frame_height)

    if is_jumping:
        y_pos += vertical_velocity
        vertical_velocity += gravity

        if y_pos >= ground_level:
            y_pos = ground_level
            is_jumping = False
            vertical_velocity = 0  # Reset vertical velocity when on the ground

    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            start = False

        if event.type == pygame.KEYDOWN:
            if event.key == pygame.K_RIGHT:
                if x_pos + movement_speed + frame_width <= WIDTH:
                    x_pos += movement_speed
                current_frame = (current_frame + 1) % len(current_frames)
                current_frames = frame_right
                player_box.x = x_pos
                if player_box.colliderect(obstacle):
                    x_pos -= movement_speed

            elif event.key == pygame.K_LEFT:
                current_frames = left_frame
                if x_pos - movement_speed >= 0:
                    x_pos -= movement_speed
                current_frame = (current_frame + 1) % len(current_frames)
                player_box.x = x_pos
                if player_box.colliderect(obstacle):
                    x_pos += movement_speed

            elif event.key == pygame.K_DOWN:
                if y_pos + movement_speed + frame_height < HEIGHT:
                    y_pos += movement_speed
                current_frame = (current_frame + 1) % len(current_frames)
                player_box.y = y_pos

            elif event.key == pygame.K_UP:
                if y_pos - movement_speed >= 0:
                    y_pos -= movement_speed
                current_frame = (current_frame + 1) % len(current_frames)
                player_box.y = y_pos

            elif event.key == pygame.K_SPACE:
                if not is_jumping:
                    is_jumping = True
                    vertical_velocity = -jump_speed  # Start upward motion

    pygame.display.update()
    clock.tick(FPS)

pygame.quit()
